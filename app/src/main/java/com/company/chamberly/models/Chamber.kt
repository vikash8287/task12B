package com.company.chamberly.models

import com.google.firebase.firestore.FieldValue
import java.io.Serializable

data class Chamber(
    val AuthorName: String = "", // Display name of the chamber author (retrieved from cache)
    val AuthorUID: String = "", // UID of the chamber author (retrieved from cache)
    val blockedUsers: List<String> = listOf(), // Empty array of blocked users
    val forPool: Boolean = false, // Set to false
    var groupChatId: String = "", // DocumentID generated by Firestore
    val groupTitle: String = "", // Chamber title entered by the user
    val isLocked: Boolean = false,
    //val locked: Boolean = false, // Set to false
    val membersLimit: Int = 2, // Set to 2
    val publishedPool: Boolean = true, // Set to true
    var lastMessage: String = "" , // To store the last message of the chat
    val timestamp: Any = FieldValue.serverTimestamp() // Timestamp of chamber creation
): Serializable

fun chamberToMap(chamber: Chamber): Map<String, Any> {
    val chamberMap = HashMap<String, Any>()
    chamberMap["AuthorName"] = chamber.AuthorName
    chamberMap["AuthorUID"] = chamber.AuthorUID
    chamberMap["blockedUsers"] = chamber.blockedUsers
    chamberMap["forPool"] = chamber.forPool
    chamberMap["groupChatId"] = chamber.groupChatId
    chamberMap["groupTitle"] = chamber.groupTitle
    chamberMap["isLocked"] = chamber.isLocked
    chamberMap["membersLimit"] = chamber.membersLimit
    chamberMap["publishedPool"] = chamber.publishedPool
    chamberMap["timestamp"] = chamber.timestamp

    return chamberMap
}

